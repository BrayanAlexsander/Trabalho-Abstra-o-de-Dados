//AeroSales
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Queue;
import java.util.Stack;
import java.util.Scanner;

class Voo {
    // ... outros membros da classe ...

    public String getOrigem() {
        return origem;
    }

    public String getDestino() {
        return destino;
    }

    // ... outros métodos da classe ...
    int numero;
    String origem;
    String destino;
    String horarioPartida;
    String horarioChegada;
    int maxPassageiros;
    List<Passageiro> reservasPendentes;

    public Voo(int numero, String origem, String destino, String horarioPartida, String horarioChegada, int maxPassageiros) {
        this.numero = numero;
        this.origem = origem;
        this.destino = destino;
        this.horarioPartida = horarioPartida;
        this.horarioChegada = horarioChegada;
        this.maxPassageiros = maxPassageiros;
        this.reservasPendentes = new ArrayList<>();
    }

    public int getNumero() {
        return numero;
    }

    public boolean adicionarReservaPendente(Passageiro passageiro) {
        if (reservasPendentes.size() < maxPassageiros) {
            reservasPendentes.add(passageiro);
            return true;
        }
        return false;
    }

    public void processarReservas() {
        while (!reservasPendentes.isEmpty()) {
            Passageiro passageiro = reservasPendentes.remove(0);
            System.out.println("Reserva confirmada para o voo " + numero + " por " + passageiro.getNome() + ".");
        }
    }

    public boolean estaCheio() {
        return reservasPendentes.size() >= maxPassageiros;
    }
}
class Passageiro {
    String nome;
    int idade;
    String cpf;
    String email;

    public Passageiro(String nome, int idade, String cpf, String email) {
        this.nome = nome;
        this.idade = idade;
        this.cpf = cpf;
        this.email = email;
    }

    public String getNome() {
        return nome;
    }
}

public class SistemaAeroporto {
    public static void main(String[] args) {
        List<Voo> voosDisponiveis = new ArrayList<>();
        Queue<Passageiro> filaReservasPendentes = new LinkedList<>();
        Stack<Passageiro> passageirosCheckin = new Stack<>();

        // Exemplo de voos disponíveis
        voosDisponiveis.add(new Voo(2014, "São Paulo", "Rio de Janeiro", "08:00", "09:30", 2));
        voosDisponiveis.add(new Voo(2001, "New York", "Los Angeles", "10:00", "12:00", 2));
        voosDisponiveis.add(new Voo(1945, "Rio de Janeiro", "Salvador", "11:00", "13:10", 2));

        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("\nOpções:");
            System.out.println("1. Fazer reserva");
            System.out.println("2. Processar reservas pendentes");
            System.out.println("3. Fazer check-in");
            System.out.println("4. Exibir informações sobre voos");
            System.out.println("5. Sair");

            int opcao = scanner.nextInt();
            scanner.nextLine();  // Consumir a quebra de linha

            switch (opcao) {
                case 1:
                    System.out.print("Digite o número do voo: ");
                    int numeroVoo = scanner.nextInt();
                    Voo vooSelecionado = null;
                    for (Voo voo : voosDisponiveis) {
                        if (voo.getNumero() == numeroVoo) {
                            vooSelecionado = voo;
                            break;
                        }
                    }
                    if (vooSelecionado != null) {
                        System.out.print("Digite seu nome: ");
                        String nome = scanner.nextLine();
                        scanner.nextLine();
                        System.out.print("Digite sua idade: ");
                        int idade = scanner.nextInt();
                        scanner.nextLine();  // Consumir a quebra de linha
                        System.out.print("Digite seu CPF: ");
                        String cpf = scanner.nextLine();
                        System.out.print("Digite seu e-mail: ");
                        String email = scanner.nextLine();
                        Passageiro passageiro = new Passageiro(nome, idade, cpf, email);
                        if (vooSelecionado.adicionarReservaPendente(passageiro)) {
                            System.out.println("Reserva pendente para o voo " + vooSelecionado.getNumero() + " feita por " + passageiro.getNome() + ".");
                        } else {
                            System.out.println("O voo " + vooSelecionado.getNumero() + " está cheio. Não é possível fazer a reserva.");
                        }
                    } else {
                        System.out.println("Voo não encontrado.");
                    }
                    break;

